---
import type { GetStaticPaths } from 'astro'
import { getCollection, type CollectionEntry } from 'astro:content'
import { byEntryDate, formatPostDate } from '../../utils'
import Layout from '../../layouts/Layout.astro'
import PageStandard from '../../layouts/PageStandard.astro'
import Container from '../../components/Container.astro'
import GradientText from '../../components/GradientText.astro'

export const getStaticPaths: GetStaticPaths = async () => {
  const postEntries = await getCollection('posts')
  const postsSorted = postEntries.toSorted(byEntryDate)

  const teamEntries = await getCollection('team')
  const teamMap: Record<string, CollectionEntry<'team'>> = {}

  teamEntries.forEach((entry) => {
    teamMap[entry.slug] = entry
  })

  return postsSorted.map((entry) => {
    const authorSlug = entry.data.author.slug
    // Replace the author object with the full entry
    entry.data.author = teamMap[authorSlug]

    return {
      params: { slug: entry.slug },
      props: {
        entry,
      },
    }
  })
}

interface Props {
  entry: CollectionEntry<'posts'> & {
    data: { author: CollectionEntry<'team'> }
  }
}

const props = Astro.props
const { entry } = props
const { author, date, description, title } = entry.data
const { Content } = await entry.render()

const formattedDate = formatPostDate(date)
---

<Layout description={description} title={`${title} | Blog | Agathist`}>
  <PageStandard>
    <Container>
      <div class="flex flex-col gap-8">
        <div class="lg:w-3/4">
          <GradientText>
            <h2 class="text-6xl font-bold leading-tight">
              {title}
            </h2>
          </GradientText>

          <div class="italic text-gray-200">Written by {author.data.name}</div>
        </div>

        <div class="flex">
          <div class="border-b-4 border-pink-500 p-1">
            {formattedDate}
          </div>
        </div>

        <div
          class="flex max-w-prose flex-col gap-8 leading-relaxed lg:text-xl lg:leading-relaxed"
        >
          <Content />
        </div>

        <hr class="my-8 border-slate-600" />

        <div class="flex flex-col gap-6">
          <p>This post was written by:</p>
          <div class="flex items-center gap-4">
            {
              author.data.imgUrl && (
                <div class="h-36 w-36 overflow-hidden rounded-2xl">
                  <img src={author.data.imgUrl} />
                </div>
              )
            }

            <div class="flex flex-col gap-1">
              <div class="text-3xl font-bold text-pink-500">
                {author.data.name}
              </div>
              <div class="text-gray-200">{author.data.role}</div>
              {
                author.data.email && (
                  <a
                    class="underline transition-colors hover:text-pink-500"
                    href={`mailto:${author.data.email}`}
                  >
                    {author.data.email}
                  </a>
                )
              }
            </div>
          </div>
        </div>
      </div>
    </Container>
  </PageStandard>
</Layout>
